---js 
{
    layout: "base",
    pagination: {
        data: "authors",
        alias: "authordata",
        size: 1,
        addAllPagesToCollections: true,
        before: function(jsonAuthors, fullData) {
            const fs = require("fs")
            // WARNING: do not ask for collections.all or bad things will happen!
            const postAuthors = fullData.collections.article
                .map(function(post) {
                    return { "name": post.data.author }
                })
                .filter(author => !!author.name)

            const authors = [...jsonAuthors, ...postAuthors]
            let uniqueAuthors = [];
            let index = {};
            for (const author of authors) {
                if (index[author.name]) continue;
                index[author.name] = true;
                uniqueAuthors.push(author)
            }
            return uniqueAuthors
        },
    },
    eleventyComputed: {  
        title : "{{ authordata.name }}",
        author: "{{ authordata.name }}",
        articlenumber: `{{ collections.article | filterByAuthor( authordata.name ) | length }}`
    },
    permalink: "authors/{{ authordata.name | slugify }}/",
    tags: ["author"]
}
---
<h1>{{ authordata.name }}</h1>
<p>{{ authordata.bio }}</p>

{% set postlist = collections["article"] | filterByAuthor( authordata.name ) %}
<ul reversed class="postlist">
{% for post in postlist | reverse %}
    <li class="postlist__item">
        <a href="{{ post.url | url }}" class="postlist__item__link">
            {% if post.data.title %}
                {{ post.data.title | safe }}
            {% else %}
                <code>{{ post.url }}</code>
            {% endif %}
        </a>
    </li>
{% endfor %}
</ul>
<p><a href="/authors">See all authors.</a></p>